
snippet cla
class ${1:Name}(${2:object}):
    def __init__(self, ${3:*args}, ${4:**kwargs}):
	    super($1, self).__init__()
endsnippet

snippet cmp
def __eq__(self, other):
    ${1:pass}

def __ne__(self, other):
    ${2:pass}

def __lt__(self, other):
    ${3:pass}

def __le__(self, other):
    ${4:pass}

def __gt__(self, other):
    ${5:pass}

def __ge__(self, other):
    ${6:pass}

def __cmp__(self, other):
    ${7:pass}
endsnippet


snippet repr
def __repr__(self):
    ${1:pass}

def __str__(self):
    ${2:pass}

def __unicode__(self):
    ${3:pass}
endsnippet


# doesn't expand when there is a word in front
snippet /(^|(?<=\W))\./ "self." r
self.
endsnippet

snippet from "from module import name" b
from ${1:module} import ${2:Stuff}
endsnippet
